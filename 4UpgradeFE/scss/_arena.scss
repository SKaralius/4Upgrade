$monsterSize: 50vmin;

.monster {
	user-select: none;
	display: flex;
	flex-flow: column;
	align-items: center;
	& > .idle {
		animation: bounce 0.2s infinite alternate;
		-webkit-animation: bounce 0.2s infinite alternate;
	}

	& > .hitRight {
		opacity: 0.5;
		animation: hitRight 1s alternate;
		-webkit-animation: hitRight 1s alternate;
	}
	& > .hitLeft {
		opacity: 0.5;
		animation: hitLeft 1s alternate;
		-webkit-animation: hitLeft 1s alternate;
	}
	& > .hitUp {
		opacity: 0.5;
		animation: hitUp 1s alternate;
		-webkit-animation: hitUp 1s alternate;
	}
	& > .healthContainer {
		margin-top: 50px;
		display: flex;
		justify-content: center;
		width: $monsterSize;
		& > .maxHealth {
			width: 100%;
			height: $monsterSize;
			background-color: $monsterSecondaryColor;
			border: 5px inset $monsterSecondaryColor;
			border-radius: 50%;
			display: flex;
			justify-content: center;
			align-items: center;
			// Dynamic style is in component.
			& > .currentHealth {
				height: $monsterSize;
				width: 100%;
				background-color: $monsterPrimaryColor;
				border-radius: 50%;
			}
		}
	}
}

//Attack button
.attackButton {
	-webkit-tap-highlight-color: transparent;
	outline: 0;

	cursor: pointer;
	position: absolute;
	height: $monsterSize;
	width: $monsterSize;
	border-radius: 50%;
	background-color: transparent;
	border: none;
}

.encounterContainer {
	display: flex;
	justify-content: center;
	.restart {
		@include button(2rem, 5rem);
	}
}

//Damage Splat
.damage {
	pointer-events: none;
	font-size: xx-large;
	position: relative;
	top: 15rem;
	font-weight: 900;
	z-index: 1;
	color: $monsterPrimaryColor;
	-webkit-text-stroke-width: 3px;
	-webkit-text-stroke-color: black;
}

.damageHidden {
	opacity: 0;
}

.damageAnimation {
	opacity: 1;
}

@import "keyframes";
